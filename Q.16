# Step 1: Install required libraries
!pip install -q pandas matplotlib seaborn scikit-learn

# Step 2: Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Step 3: Load the dataset
# Upload the dataset first if not using Kaggle API
df = pd.read_csv('/content/mobile_user_data.csv')  # Replace with your actual file name

# Step 4: Preview and clean
print("Columns:", df.columns)
df.head()

# Step 5: Select behavior features for clustering
# Replace with actual column names from dataset
features = ['Session Duration', 'Pages Visited', 'Time on App', 'Time on Website']
df_clustering = df[features].dropna()

# Step 6: Scale the data
scaler = StandardScaler()
scaled_data = scaler.fit_transform(df_clustering)

# Step 7: Determine optimal number of clusters using Elbow Method
sse = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(scaled_data)
    sse.append(kmeans.inertia_)

# Plot the Elbow curve
plt.figure(figsize=(8, 5))
plt.plot(range(1, 11), sse, marker='o')
plt.title('Elbow Method - Optimal Clusters')
plt.xlabel('Number of clusters')
plt.ylabel('SSE (Inertia)')
plt.grid(True)
plt.show()

# Step 8: Apply KMeans (Assume optimal k = 3 for example)
kmeans = KMeans(n_clusters=3, random_state=42)
df['Cluster'] = kmeans.fit_predict(scaled_data)

# Step 9: Visualize clusters
plt.figure(figsize=(8, 5))
sns.scatterplot(data=df, x='Session Duration', y='Pages Visited', hue='Cluster', palette='Set2')
plt.title('User Segmentation based on Behavior')
plt.show()

# Step 10: Cluster summary
cluster_summary = df.groupby('Cluster')[features].mean()
print("\nCluster Behavioral Summary:")
print(cluster_summary)
