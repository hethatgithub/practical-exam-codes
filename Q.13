# Step 1: Install dependencies
!pip install -q scikit-learn pandas

# Step 2: Import libraries
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score

# Step 3: Load the dataset (upload the CSVs from Kaggle)
fake = pd.read_csv('/content/Fake.csv')
real = pd.read_csv('/content/True.csv')

# Step 4: Add labels
fake['label'] = 0  # Fake news
real['label'] = 1  # Real news

# Step 5: Combine both datasets
df = pd.concat([fake, real], axis=0).reset_index(drop=True)

# Step 6: Use only headlines for classification
df = df[['title', 'label']].dropna()

# Step 7: Split dataset
X_train, X_test, y_train, y_test = train_test_split(df['title'], df['label'], test_size=0.2, random_state=42)

# Step 8: TF-IDF Vectorization
vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Step 9: Train classifier
model = LogisticRegression()
model.fit(X_train_vec, y_train)

# Step 10: Evaluate
y_pred = model.predict(X_test_vec)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
