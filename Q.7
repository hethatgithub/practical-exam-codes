# Step 1: Import required libraries
import networkx as nx
import matplotlib.pyplot as plt

# Step 2: Load the political blogs dataset (edges)
G = nx.read_edgelist("polblogs.gml", create_using=nx.DiGraph())  # Use GML format

# If using SNAP's .txt file version:
# G = nx.read_edgelist("polblogs.txt", create_using=nx.DiGraph())

# Step 3: Compute centrality measures
pagerank_scores = nx.pagerank(G)
in_degree_scores = nx.in_degree_centrality(G)

# Step 4: Identify top 5 opinion leaders using PageRank
top_leaders = sorted(pagerank_scores.items(), key=lambda x: x[1], reverse=True)[:5]

print("Top 5 Opinion Leaders (by PageRank):")
for node, score in top_leaders:
    print(f"Blog ID: {node}, PageRank Score: {round(score, 5)}")

# Step 5: Visualize opinion leaders in the network
plt.figure(figsize=(10, 7))
pos = nx.spring_layout(G, seed=42)
node_sizes = [pagerank_scores[node]*5000 for node in G.nodes()]
nx.draw(G, pos, with_labels=False, node_size=node_sizes, node_color='skyblue', edge_color='gray', alpha=0.7)
plt.title("Political Blogs Network (Opinion Leaders Highlighted)")
plt.axis('off')
plt.show()
